#!/bin/bash

TMUX_SESSION=minecraft
MINECRAFT_STARTUP_SCRIPT=""
MINECRAFT_HOME="/opt/minecraft"
MINECRAFT_SRC="/usr/src/minecraft"
MINECRAFT_VERSION=${MINECRAFT_VERSION:-1.8.8}
MINECRAFT_JAR=${MINECRAFT_JAR:-"minecraft_server.$MINECRAFT_VERSION.jar"}
MINECRAFT_STARTUP_JAR=${MINECRAFT_STARTUP_JAR:-"$MINECRAFT_JAR"}
MINECRAFT_SERVER_URL="https://s3.amazonaws.com/Minecraft.Download/versions/$MINECRAFT_VERSION/$MINECRAFT_JAR"
MINECRAFT_OPTS=${MINECRAFT_OPTS:-"-server -Xmx1024m -XX:MaxPermSize=256m -XX:+UseParNewGC -XX:+UseConcMarkSweepGC"}

check_env() {
    # Agree to EULA.
    if [ "$MINECRAFT_EULA" == "true" ]; then
        echo "Updating $MINECRAFT_HOME/eula.txt"
        echo "eula=$MINECRAFT_EULA" > $MINECRAFT_HOME/eula.txt
    else
        >&2 echo "Mojang requires you to accept their EULA. You need to set the MINECRAFT_EULA variable to true."
        exit 1
    fi

    # Do not allow to run if there is no DEFAULT_OP
    if [ -z "$DEFAULT_OP" ]; then
        >&2 echo "DEFAULT_OP is required. Please set this variable to continue."
        exit 1
    fi
}

download_server() {
    # Download the Minecraft server JAR if it does not exist.
    if [ ! -f "$MINECRAFT_HOME/$MINECRAFT_JAR" ]; then
        echo "Downloading $MINECRAFT_JAR"
        curl -f -S $MINECRAFT_SERVER_URL -o $MINECRAFT_HOME/$MINECRAFT_JAR

        if [ $? -ne 0 ]; then
            >&2 echo "Unable to download $MINECRAFT_JAR."
            exit 1
        fi
    fi
}

first_run() {
    # Sync files from $MINECRAFT_SRC to $MINECRAFT_HOME. Do this on container's first run.
    if [ -f "/run/first_time" ]; then
        rsync -avhP --exclude '/world*' $MINECRAFT_SRC/ $MINECRAFT_HOME
        rm /run/first_time
    fi

    # Create server.properties if it doesn't exist
    if [ ! -f "$MINECRAFT_HOME/server.properties" ]; then
        echo "Creating $MINECRAFT_HOME/server.properties"
        echo "generator-settings=$GENERATOR_SETTINGS" >> $MINECRAFT_HOME/server.properties
        echo "op-permission-level=${OP_PERMISSION_LEVEL:-4}" >> $MINECRAFT_HOME/server.properties
        echo "allow-nether=${ALLOW_NETHER:-true}" >> $MINECRAFT_HOME/server.properties
        echo "level-name=world" >> $MINECRAFT_HOME/server.properties
        echo "enable-query=${ENABLE_QUERY:-false}" >> $MINECRAFT_HOME/server.properties
        echo "allow-flight=${ALLOW_FLIGHT:-false}" >> $MINECRAFT_HOME/server.properties
        echo "announce-player-achievements=${ANNOUNCE_PLAYER_ACHIEVEMENTS:-true}" >> $MINECRAFT_HOME/server.properties
        echo "server-port=25565" >> $MINECRAFT_HOME/server.properties
        echo "level-type=${LEVEL_TYPE:-DEFAULT}" >> $MINECRAFT_HOME/server.properties
        echo "enable-rcon=${ENABLE_RCON:-false}" >> $MINECRAFT_HOME/server.properties
        echo "force-gamemode=${FORCE_GAMEMODE:-false}" >> $MINECRAFT_HOME/server.properties
        echo "level-seed=$LEVEL_SEED" >> $MINECRAFT_HOME/server.properties
        echo "server-ip=$SERVER_IP" >> $MINECRAFT_HOME/server.properties
        echo "max-build-height=${MAX_BUILD_HEIGHT:-256}" >> $MINECRAFT_HOME/server.properties
        echo "spawn-npcs=${SPAWN_NPCS:-true}" >> $MINECRAFT_HOME/server.properties
        echo "white-list=${WHITE_LIST:-true}" >> $MINECRAFT_HOME/server.properties
        echo "spawn-animals=${SPAWN_ANIMALS:-true}" >> $MINECRAFT_HOME/server.properties
        echo "snooper-enabled=${SNOOPER_ENABLED:-true}" >> $MINECRAFT_HOME/server.properties
        echo "online-mode=${ONLINE_MODE:-true}" >> $MINECRAFT_HOME/server.properties
        echo "resource-pack=$RESOURCE_PACK" >> $MINECRAFT_HOME/server.properties
        echo "pvp=${PVP:-true}" >> $MINECRAFT_HOME/server.properties
        echo "difficulty=${DIFFICULTY:-2}" >> $MINECRAFT_HOME/server.properties
        echo "enable-command-block=${ENABLE_COMMAND_BLOCK:-true}" >> $MINECRAFT_HOME/server.properties
        echo "player-idle-timeout=${PLAYER_IDLE_TIMEOUT:-0}" >> $MINECRAFT_HOME/server.properties
        echo "gamemode=${GAMEMODE:-0}" >> $MINECRAFT_HOME/server.properties
        echo "max-players=${MAX_PLAYERS:-20}" >> $MINECRAFT_HOME/server.properties
        echo "spawn-monsters=${SPAWN_MONSTERS:-true}" >> $MINECRAFT_HOME/server.properties
        echo "view-distance=${VIEW_DISTANCE:-10}" >> $MINECRAFT_HOME/server.properties
        echo "generate-structures=${GENERATE_STRUCTURES:-true}" >> $MINECRAFT_HOME/server.properties
        echo "motd=${MOTD:-A Minecraft Server}" >> $MINECRAFT_HOME/server.properties
    else
        [[ -n $GENERATOR_SETTINGS ]] && sed -i "/generator-settings=/c\generator-settings=$GENERATOR_SETTINGS" $MINECRAFT_HOME/server.properties
        [[ -n $OP_PERMISSION_LEVEL ]] && sed -i "/op-permission-level=/c\op-permission-level=$OP_PERMISSION_LEVEL" $MINECRAFT_HOME/server.properties
        [[ -n $ALLOW_NETHER ]] && sed -i "/allow-nether=/c\allow-nether=$ALLOW_NETHER" $MINECRAFT_HOME/server.properties
        [[ -n $LEVEL_NAME ]] && sed -i "/level-name=/c\level-name=$LEVEL_NAME" $MINECRAFT_HOME/server.properties
        [[ -n $ENABLE_QUERY ]] && sed -i "/enable-query=/c\enable-query=$ENABLE_QUERY" $MINECRAFT_HOME/server.properties
        [[ -n $ALLOW_FLIGHT ]] && sed -i "/allow-flight=/c\allow-flight=$ALLOW_FLIGHT" $MINECRAFT_HOME/server.properties
        [[ -n $ANNOUNCE_PLAYER_ACHIEVEMENTS ]] && sed -i "/announce-player-achievements=/c\announce-player-achievements=$ANNOUNCE_PLAYER_ACHIEVEMENTS" $MINECRAFT_HOME/server.properties
        [[ -n $SERVER_PORT ]] && sed -i "/server-port=/c\server-port=$SERVER_PORT" $MINECRAFT_HOME/server.properties
        [[ -n $LEVEL_TYPE ]] && sed -i "/level-type=/c\level-type=$LEVEL_TYPE" $MINECRAFT_HOME/server.properties
        [[ -n $ENABLE_RCON ]] && sed -i "/enable-rcon=/c\enable-rcon=$ENABLE_RCON" $MINECRAFT_HOME/server.properties
        [[ -n $FORCE_GAMEMODE ]] && sed -i "/force-gamemode=/c\force-gamemode=$FORCE_GAMEMODE" $MINECRAFT_HOME/server.properties
        [[ -n $LEVEL_SEED ]] && sed -i "/level-seed=/c\level-seed=$LEVEL_SEED" $MINECRAFT_HOME/server.properties
        [[ -n $SERVER_IP ]] && sed -i "/server-ip=/c\server-ip=$SERVER_IP" $MINECRAFT_HOME/server.properties
        [[ -n $MAX_BUILD_HEIGHT ]] && sed -i "/max-build-height=/c\max-build-height=$MAX_BUILD_HEIGHT" $MINECRAFT_HOME/server.properties
        [[ -n $SPAWN_NPCS ]] && sed -i "/spawn-npcs=/c\spawn-npcs=$SPAWN_NPCS" $MINECRAFT_HOME/server.properties
        [[ -n $WHITE_LIST ]] && sed -i "/white-list=/c\white-list=$WHITE_LIST" $MINECRAFT_HOME/server.properties
        [[ -n $SPAWN_ANIMALS ]] && sed -i "/spawn-animals=/c\spawn-animals=$SPAWN_ANIMALS" $MINECRAFT_HOME/server.properties
        [[ -n $HARDCORE ]] && sed -i "/hardcore=/c\hardcore=$HARDCORE" $MINECRAFT_HOME/server.properties
        [[ -n $SNOOPER_ENABLED ]] && sed -i "/snooper-enabled=/c\snooper-enabled=$SNOOPER_ENABLED" $MINECRAFT_HOME/server.properties
        [[ -n $ONLINE_MODE ]] && sed -i "/online-mode=/c\online-mode=$ONLINE_MODE" $MINECRAFT_HOME/server.properties
        [[ -n $RESOURCE_PACK ]] && sed -i "/resource-pack=/c\resource-pack=$RESOURCE_PACK" $MINECRAFT_HOME/server.properties
        [[ -n $PVP ]] && sed -i "/pvp=/c\pvp=$PVP" $MINECRAFT_HOME/server.properties
        [[ -n $DIFFICULTY ]] && sed -i "/difficulty=/c\difficulty=$DIFFICULTY" $MINECRAFT_HOME/server.properties
        [[ -n $ENABLE_COMMAND_BLOCK ]] && sed -i "/enable-command-block=/c\enable-command-block=$ENABLE_COMMAND_BLOCK" $MINECRAFT_HOME/server.properties
        [[ -n $GAMEMODE ]] && sed -i "/gamemode=/c\gamemode=$GAMEMODE" $MINECRAFT_HOME/server.properties
        [[ -n $PLAYER_IDLE_TIMEOUT ]] && sed -i "/player-idle-timeout=/c\player-idle-timeout=$PLAYER_IDLE_TIMEOUT" $MINECRAFT_HOME/server.properties
        [[ -n $MAX_PLAYERS ]] && sed -i "/max-players=/c\max-players=$MAX_PLAYERS" $MINECRAFT_HOME/server.properties
        [[ -n $SPAWN_MONSTERS ]] && sed -i "/spawn-monsters=/c\spawn-monsters=$SPAWN_MONSTERS" $MINECRAFT_HOME/server.properties
        [[ -n $GENERATE_STRUCTURES ]] && sed -i "/generate-structures=/c\generate-structures=$GENERATE_STRUCTURES" $MINECRAFT_HOME/server.properties
        [[ -n $VIEW_DISTANCE ]] && sed -i "/view-distance=/c\view-distance=$VIEW_DISTANCE" $MINECRAFT_HOME/server.properties
        [[ -n $SPAWN_PROTECTION ]] && sed -i "/spawn-protection=/c\spawn-protection=$SPAWN_PROTECTION" $MINECRAFT_HOME/server.properties
        [[ -n $MOTD ]] && sed -i "/motd=/c\motd=$MOTD" $MINECRAFT_HOME/server.properties
    fi

    # Copy world template if there is no world yet.
    if ! find $MINECRAFT_HOME/world -mindepth 1 -print -quit | grep -q . && { find $MINECRAFT_SRC/world -mindepth 1 -print -quit | grep -q .; }; then
        echo "World template found in $MINECRAFT_SRC"
        echo "Creating new world in $MINECRAFT_HOME"
        cp -rf $MINECRAFT_SRC/world* $MINECRAFT_HOME
    fi

    # Create default ops.txt if ops.json does not exist yet.
    if [ ! -f $MINECRAFT_HOME/ops.json ]; then
        echo "Adding $DEFAULT_OP to ops list."
        echo "$DEFAULT_OP" > $MINECRAFT_HOME/ops.txt
        echo "$DEFAULT_OP" > $MINECRAFT_HOME/white-list.txt
    fi
}

update_permissions() {
    chown -R minecraft:minecraft $MINECRAFT_HOME $WORLD_DIR
}

run_minecraft() {
    echo "TERM is set to $TERM"
    pushd $MINECRAFT_HOME > /dev/null
    echo "Running Minecraft"
    echo "MINECRAFT_OPTS: $MINECRAFT_OPTS"

    PARAMS=$@
    MINECRAFT_COMMAND="gosu minecraft java $MINECRAFT_OPTS -jar $MINECRAFT_HOME/$MINECRAFT_STARTUP_JAR nogui ${PARAMS[@]}"

    if [ -z "$MINECRAFT_STARTUP_SCRIPT" ]; then
        PARAMS=$@
        MINECRAFT_COMMAND="gosu minecraft java $MINECRAFT_OPTS -jar $MINECRAFT_HOME/$MINECRAFT_STARTUP_JAR nogui ${PARAMS[@]}"   
        echo "We are in JAR mode!"
    else
        MINECRAFT_COMMAND="gosu minecraft $MINECRAFT_HOME/$MINECRAFT_STARTUP_SCRIPT"
        echo "We are in SCRIPT mode!"
    fi

    echo "Extra parameters: ${PARAMS[@]}"

    if [ "$TERM" == "dumb" ]; then
        >&2 echo "WARNING! Dumb term detected. Switching to noconsole mode."
        >&2 echo "Safe shutdown must be done via /stop chat command."
        exec $MINECRAFT_COMMAND
    else
        tmux new -s $TMUX_SESSION "$MINECRAFT_COMMAND"
    fi
}

console_command() {
    COMMAND=$@
    if [ "$TERM" == "dumb" ]; then
        >&2 echo "Console command not supported on a dumb term."
        exit 1
    else
        echo "Executing console command: ${COMMAND[@]}"
        tmux send -t $TMUX_SESSION "${COMMAND[@]}" ENTER
    fi
}

safe_shutdown() {
    echo "Performing safe shutdown..."
    console_command stop
}

case "$1" in
    run)
        shift 1
        check_env
        download_server
        first_run
        update_permissions
        trap safe_shutdown EXIT
        run_minecraft $@
        ;;
    permissions)
        shift 1
        update_permissions
        ;;
    console)
        shift 1
        console_command $@
        ;;
    *)
        exec "$@"
esac
